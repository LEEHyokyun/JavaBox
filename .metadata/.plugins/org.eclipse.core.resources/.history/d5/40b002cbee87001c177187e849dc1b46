**1day 주요목차**
- 전체 커리큘럼
	ㅁ Java SE
	ㅁ Database & JDBC
	ㅁ HTML & CSS & Javascript
	ㅁ Servlet & JSP (Model2 MVC, FrontController)
	ㅁ Ajax
	ㅁ UML, ERD, 형상관리 등
	ㅁ Semi Project
	ㅁ FrameWork(Spring IOC, DI, AOP, SpringMVC, jUnit, SpringBoot, Thymeleaf, Security, Rest, MSA-SpringCloud, JPA)
	ㅁ Final Project
- 과목별 커리큘럼
	ㅁ JavaSE & mini project - 4W
		ㅁ Java SE 환경설정, 특징, 구동방식
		ㅁ Java 기본문법(변수, 메소드, 생성자)
		ㅁ OOP(객체지향 프로그래밍)
		ㅁ Data type 
		ㅁ 객체 초기화 단계
		ㅁ 제어문(조건, 반복)
		ㅁ 변수의 종류와 범위
		ㅁ 배열(Array)
		ㅁ 상속(inheritance)
		ㅁ 다형성(Polymorphism)
		ㅁ static, final, abstract, interface
		ㅁ Collection(자료구조)
		ㅁ Exception
		ㅁ IO
		ㅁ Thread(web application에 유용하게 활용)
		ㅁ Network 프로그래밍(TCP기반)
- Java 특징과 구동방식
	Java의 특징
	1) 객체 지향 언어이다.
	2) 플랫폼 독립적이다(JVM있다면 어느 운영체제에서든 동작).
	3) 메모리 관리가 자동적으로 이루어진다.
	
	Java 구동방식
	HelloWorld.java - compile(기계어로 만드는 과정) - class 생성(HelloWorld.class) - Runtime(실행)
	JDK(Java Development Kit)
	Java 개발 도구 - JRE(Java Runtime Environment), 자바실행환경 있음 / JVM(Java Virtual Machine), 자바가상머신 Java를 실행시키는 기반
	
	Java SE 개발환경
	JDK install / IDE(Integrated Developing Environment, eclipse가 이에 해당) 
	
- 객체지향개념(OOC	, Object Oriented Concept)
	객체 지향이란, 시스템의 기본 "단위"를 객체로 상정하여, 객체와 객체의 관계를 중심으로 분석 설계 구현하는 개념을 일컫는다.
	*class diagram을 기반으로 프로젝트 구성
	*C, C#, python이 대표적인 객체지향언어
	객체지향프로그래밍(OOP, Object Oriented Programming)의 기반이 되는 개념
	
	Object(객체)은 시스템의 기본 단위, 마치 세포와도 같다.
	ㅁ 속성, 기능으로 구성
		ㅁ 속성(attribute, variable) - 객체의 정보를 저장, 보통 변수라 일컫는다.
			* 인스턴스 변수 : 클래스 내부에서 선언된 변수, 인스턴스를 생성해야 사용가능
			* 클래스 변수 : 인스턴스를 생성하지 않고도 사용가능
		ㅁ 기능(Operation, method) - 객체의 기능을 저장
	Class(클래스)는 객체를 생성하고 참조하기 위한 (Object의) 틀, 뼈대
		ㅁ 추상적인 class에서 인스턴스로 실재화.
		
- Java 기본 문법
 	ㅁ 변수 : 정보를 저장하기 위한 공간
 		* int - data type
 		* 메소드 내에서만 사용가능한 지역변수, 클래스 안에 선언되어 인스턴스 생성시 사용가능한 인스턴스 변수
 	ㅁ 메서드 : 객체의 기능
 		* Worker Method, Calling Method(메서드 정의가 이루어져야 메서드 호출이 가능)
 		* 정의를 한 후, 실질적으로 동작시키는 구현부가 존재해야 실행이 된다.
 		* parameter(메소드 정의에서의 인자), passing argument (메서드를 호출하면서 인자 전달)
 		* return value (반환값)가 존재하는 메소드
 		
 	ㅁ 메서드 example
 		public - 접근 제한자	
 		Worker method의 경우 parameter(매개변수영역에서의 매개변수)
 		
 		ex1) public void eat(int count){
 			
 		}
 		
 		return type, 호출한 쪽으로 정보를 반환할때 사용하는 JAVA 키워드
 		ex2) public String eat(){
 			return "Hello";
 		}
 	ㅁ 접근제한자(access modifier)
 		class, variable, method 앞에 접근 권한을 명시하기 위해 사용하는 자바 예약어	
 		public(다른 패키지에서도 접근 가능)
 		 > protected(기본적으로 같은 패키지내, 다른 패키지라도 상속관계에서는 접근 가능) 
 		 > default(접근제어자를 별도 표기하지 않은 경우, 같은 패키지 내에서만 접근 가능) 
 		 > private(동일한 클래스 내에서만 접근 가능)
		
